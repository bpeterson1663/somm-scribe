
mutation CreatePlan($name: String, $price: Float, $maxWine: Int, $maxTasting: Int, $description: String, $upgradablePlans: [String!], $downgradablePlans: [String!], $isActive: Boolean, $trialLength: Int) @auth(level: USER) {
    plan_insert(data: {
        name: $name,
        price: $price,
        maxWine: $maxWine,
        maxTasting: $maxTasting,
        description: $description,
        upgradablePlans: $upgradablePlans,
        downgradablePlans: $downgradablePlans,
        isActive: $isActive,
        trialLength: $trialLength,
    })
}

mutation CreateAccount($avatar: String, $firstName: String, $lastName: String, $displayName: String, $authId: String, $email: String, $plan: Plan_Key, $onboardingComplete: Boolean) @auth(level: USER) {
    account_insert(data: {
        avatar: $avatar,
        firstName: $firstName,
        lastName: $lastName,
        displayName: $displayName,
        authId: $authId,
        email: $email,
        plan: $plan,
        onboardingComplete: $onboardingComplete,
    })
}

mutation CreateTasting($account: Account_Key, $name: String, $region: String, $date: Timestamp, $notes: String, $imageUrl: String, $tags: [String!], $price: Float, $varietals: [String!], $rating: Int, $purchaseLocation: String, $wouldBuyAgain: Boolean, $createdAt: Timestamp) @auth(level: USER) {
    tasting_insert(data: {
        account: $account,
        name: $name,
        date: $date,
        notes: $notes,
        imageUrl: $imageUrl,
        tags: $tags,
        varietals: $varietals,
        price: $price,
        region: $region,
        rating: $rating,
        purchaseLocation: $purchaseLocation,
        wouldBuyAgain: $wouldBuyAgain,
        createdAt: $createdAt,
        updatedAt: $createdAt
    })
}

mutation UpdateAccount($id: UUID, $avatar: String, $firstName: String, $lastName: String, $displayName: String, $authId: String, $email: String, $plan: Plan_Key) @auth(level: USER) {
    account_update(id: $id, data: {
        avatar: $avatar,
        firstName: $firstName,
        lastName: $lastName,
        displayName: $displayName,
        authId: $authId,
        email: $email,
        plan: $plan,
    })
}

mutation UpdateTasting($id: UUID, $name: String, $region: String, $date: Timestamp, $notes: String, $imageUrl: String, $tags: [String!], $price: Float, $varietals: [String!], $rating: Int, $purchaseLocation: String, $wouldBuyAgain: Boolean, $updatedAt: Timestamp) @auth(level: USER) {
  tasting_update(id: $id, data: {
        name: $name,
        date: $date,
        notes: $notes,
        imageUrl: $imageUrl,
        tags: $tags,
        varietals: $varietals,
        price: $price,
        region: $region,
        rating: $rating,
        purchaseLocation: $purchaseLocation,
        wouldBuyAgain: $wouldBuyAgain,
        updatedAt: $updatedAt,
    })
}

mutation DeleteTasting($id: UUID!) @auth(level: USER) {
  tasting_delete(id: $id)
}